// Code generated by protoc-gen-gogo.
// source: shrty.proto
// DO NOT EDIT!

/*
Package shrty is a generated protocol buffer package.

It is generated from these files:
	shrty.proto

It has these top-level messages:
	ShortenRequest
	ShortenResponse
	ExpandRequest
	ExpandResponse
	ShortenedURL
*/
package shrty

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type ShortenRequest struct {
	URL string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
}

func (m *ShortenRequest) Reset()                    { *m = ShortenRequest{} }
func (m *ShortenRequest) String() string            { return proto.CompactTextString(m) }
func (*ShortenRequest) ProtoMessage()               {}
func (*ShortenRequest) Descriptor() ([]byte, []int) { return fileDescriptorShrty, []int{0} }

func (m *ShortenRequest) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

type ShortenResponse struct {
	ShrtURL string `protobuf:"bytes,1,opt,name=ShrtURL,proto3" json:"ShrtURL,omitempty"`
	Token   string `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (m *ShortenResponse) Reset()                    { *m = ShortenResponse{} }
func (m *ShortenResponse) String() string            { return proto.CompactTextString(m) }
func (*ShortenResponse) ProtoMessage()               {}
func (*ShortenResponse) Descriptor() ([]byte, []int) { return fileDescriptorShrty, []int{1} }

func (m *ShortenResponse) GetShrtURL() string {
	if m != nil {
		return m.ShrtURL
	}
	return ""
}

func (m *ShortenResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ExpandRequest struct {
	Token string `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (m *ExpandRequest) Reset()                    { *m = ExpandRequest{} }
func (m *ExpandRequest) String() string            { return proto.CompactTextString(m) }
func (*ExpandRequest) ProtoMessage()               {}
func (*ExpandRequest) Descriptor() ([]byte, []int) { return fileDescriptorShrty, []int{2} }

func (m *ExpandRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ExpandResponse struct {
	URL string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
}

func (m *ExpandResponse) Reset()                    { *m = ExpandResponse{} }
func (m *ExpandResponse) String() string            { return proto.CompactTextString(m) }
func (*ExpandResponse) ProtoMessage()               {}
func (*ExpandResponse) Descriptor() ([]byte, []int) { return fileDescriptorShrty, []int{3} }

func (m *ExpandResponse) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

type ShortenedURL struct {
	ID          int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	OrigURL     string `protobuf:"bytes,2,opt,name=OrigURL,proto3" json:"OrigURL,omitempty"`
	ShrtURL     string `protobuf:"bytes,3,opt,name=ShrtURL,proto3" json:"ShrtURL,omitempty"`
	Token       string `protobuf:"bytes,4,opt,name=Token,proto3" json:"Token,omitempty"`
	CreatedTime int64  `protobuf:"varint,5,opt,name=CreatedTime,proto3" json:"CreatedTime,omitempty"`
	Views       int64  `protobuf:"varint,6,opt,name=Views,proto3" json:"Views,omitempty"`
}

func (m *ShortenedURL) Reset()                    { *m = ShortenedURL{} }
func (m *ShortenedURL) String() string            { return proto.CompactTextString(m) }
func (*ShortenedURL) ProtoMessage()               {}
func (*ShortenedURL) Descriptor() ([]byte, []int) { return fileDescriptorShrty, []int{4} }

func (m *ShortenedURL) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *ShortenedURL) GetOrigURL() string {
	if m != nil {
		return m.OrigURL
	}
	return ""
}

func (m *ShortenedURL) GetShrtURL() string {
	if m != nil {
		return m.ShrtURL
	}
	return ""
}

func (m *ShortenedURL) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ShortenedURL) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *ShortenedURL) GetViews() int64 {
	if m != nil {
		return m.Views
	}
	return 0
}

func init() {
	proto.RegisterType((*ShortenRequest)(nil), "shrty.ShortenRequest")
	proto.RegisterType((*ShortenResponse)(nil), "shrty.ShortenResponse")
	proto.RegisterType((*ExpandRequest)(nil), "shrty.ExpandRequest")
	proto.RegisterType((*ExpandResponse)(nil), "shrty.ExpandResponse")
	proto.RegisterType((*ShortenedURL)(nil), "shrty.ShortenedURL")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Shrty service

type ShrtyClient interface {
	Shorten(ctx context.Context, in *ShortenRequest, opts ...grpc.CallOption) (*ShortenResponse, error)
	Expand(ctx context.Context, in *ExpandRequest, opts ...grpc.CallOption) (*ExpandResponse, error)
}

type shrtyClient struct {
	cc *grpc.ClientConn
}

func NewShrtyClient(cc *grpc.ClientConn) ShrtyClient {
	return &shrtyClient{cc}
}

func (c *shrtyClient) Shorten(ctx context.Context, in *ShortenRequest, opts ...grpc.CallOption) (*ShortenResponse, error) {
	out := new(ShortenResponse)
	err := grpc.Invoke(ctx, "/shrty.Shrty/Shorten", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shrtyClient) Expand(ctx context.Context, in *ExpandRequest, opts ...grpc.CallOption) (*ExpandResponse, error) {
	out := new(ExpandResponse)
	err := grpc.Invoke(ctx, "/shrty.Shrty/Expand", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Shrty service

type ShrtyServer interface {
	Shorten(context.Context, *ShortenRequest) (*ShortenResponse, error)
	Expand(context.Context, *ExpandRequest) (*ExpandResponse, error)
}

func RegisterShrtyServer(s *grpc.Server, srv ShrtyServer) {
	s.RegisterService(&_Shrty_serviceDesc, srv)
}

func _Shrty_Shorten_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShortenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShrtyServer).Shorten(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shrty.Shrty/Shorten",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShrtyServer).Shorten(ctx, req.(*ShortenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Shrty_Expand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExpandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShrtyServer).Expand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shrty.Shrty/Expand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShrtyServer).Expand(ctx, req.(*ExpandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Shrty_serviceDesc = grpc.ServiceDesc{
	ServiceName: "shrty.Shrty",
	HandlerType: (*ShrtyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Shorten",
			Handler:    _Shrty_Shorten_Handler,
		},
		{
			MethodName: "Expand",
			Handler:    _Shrty_Expand_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shrty.proto",
}

func init() { proto.RegisterFile("shrty.proto", fileDescriptorShrty) }

var fileDescriptorShrty = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0xce, 0x28, 0x2a,
	0xa9, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x94, 0x94, 0xb8, 0xf8, 0x82,
	0x33, 0xf2, 0x8b, 0x4a, 0x52, 0xf3, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x04, 0xb8,
	0x98, 0x43, 0x83, 0x7c, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x40, 0x4c, 0x25, 0x47, 0x2e,
	0x7e, 0xb8, 0x9a, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x09, 0x2e, 0xf6, 0xe0, 0x8c, 0xa2,
	0x12, 0x84, 0x42, 0x18, 0x57, 0x48, 0x84, 0x8b, 0x35, 0x24, 0x3f, 0x3b, 0x35, 0x4f, 0x82, 0x09,
	0x2c, 0x0e, 0xe1, 0x28, 0xa9, 0x72, 0xf1, 0xba, 0x56, 0x14, 0x24, 0xe6, 0xa5, 0xc0, 0x6c, 0x81,
	0x2b, 0x63, 0x44, 0x56, 0xa6, 0xc4, 0xc5, 0x07, 0x53, 0x06, 0xb5, 0x08, 0xd3, 0x35, 0x0b, 0x18,
	0xb9, 0x78, 0xa0, 0xce, 0x49, 0x4d, 0x01, 0xd9, 0xc8, 0xc7, 0xc5, 0xe4, 0xe9, 0x02, 0x56, 0xc1,
	0x1c, 0xc4, 0xe4, 0xe9, 0x02, 0x72, 0x9b, 0x7f, 0x51, 0x66, 0x3a, 0x48, 0x1b, 0xc4, 0x0d, 0x30,
	0x2e, 0xb2, 0xab, 0x99, 0x71, 0xb8, 0x9a, 0x05, 0xc9, 0x39, 0x42, 0x0a, 0x5c, 0xdc, 0xce, 0x45,
	0xa9, 0x89, 0x25, 0xa9, 0x29, 0x21, 0x99, 0xb9, 0xa9, 0x12, 0xac, 0x60, 0x2b, 0x90, 0x85, 0x40,
	0xfa, 0xc2, 0x32, 0x53, 0xcb, 0x8b, 0x25, 0xd8, 0xc0, 0x72, 0x10, 0x8e, 0x51, 0x0d, 0x17, 0x2b,
	0xc8, 0xe0, 0x4a, 0x21, 0x2b, 0x90, 0x85, 0x60, 0xa7, 0x0a, 0x89, 0xea, 0x41, 0x42, 0x1f, 0x35,
	0xb4, 0xa5, 0xc4, 0xd0, 0x85, 0x21, 0xfe, 0x56, 0x62, 0x10, 0x32, 0xe7, 0x62, 0x83, 0x84, 0x85,
	0x90, 0x08, 0x54, 0x0d, 0x4a, 0x08, 0x4a, 0x89, 0xa2, 0x89, 0xc2, 0x34, 0x26, 0xb1, 0x81, 0x23,
	0xd8, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x14, 0x32, 0x7b, 0xb7, 0xef, 0x01, 0x00, 0x00,
}
